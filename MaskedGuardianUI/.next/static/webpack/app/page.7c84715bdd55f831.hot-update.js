"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/../MaskedGuardian - Wallet Security Analyst/library/WriteGuardianContract.ts":
/*!************************************************************************************!*\
  !*** ../MaskedGuardian - Wallet Security Analyst/library/WriteGuardianContract.ts ***!
  \************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WriteGuardianContract: function() { return /* binding */ WriteGuardianContract; }\n/* harmony export */ });\n/* harmony import */ var _contracts_MaskedGuardianABI_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../contracts/MaskedGuardianABI.json */ \"(app-pages-browser)/../MaskedGuardian - Wallet Security Analyst/contracts/MaskedGuardianABI.json\");\n\nconst abi = _contracts_MaskedGuardianABI_json__WEBPACK_IMPORTED_MODULE_0__;\nfunction WriteGuardianContract(walletClient) {\n    return {\n        write: {\n            setGuardianStatus: (address)=>{\n                var _walletClient_account;\n                return walletClient.writeContract({\n                    address: \"0xce9B0A9615dc8C912f2ff0531D1cf166AeaB2838\",\n                    abi,\n                    functionName: \"setBlockedRecipient\",\n                    args: [\n                        address,\n                        true\n                    ],\n                    account: (_walletClient_account = walletClient.account) === null || _walletClient_account === void 0 ? void 0 : _walletClient_account.address,\n                    chain: undefined\n                });\n            }\n        }\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi9NYXNrZWRHdWFyZGlhbiAtIFdhbGxldCBTZWN1cml0eSBBbmFseXN0L2xpYnJhcnkvV3JpdGVHdWFyZGlhbkNvbnRyYWN0LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRTBEO0FBRTFELE1BQU1DLE1BQU1ELDhEQUFPQTtBQUVaLFNBQVNFLHNCQUFzQkMsWUFBMEI7SUFDOUQsT0FBTztRQUNMQyxPQUFPO1lBQ0xDLG1CQUFtQixDQUFDQztvQkFNUEg7dUJBTFhBLGFBQWFJLGFBQWEsQ0FBQztvQkFDekJELFNBQVM7b0JBQ1RMO29CQUNBTyxjQUFjO29CQUNkQyxNQUFNO3dCQUFDSDt3QkFBUztxQkFBSztvQkFDckJJLE9BQU8sR0FBRVAsd0JBQUFBLGFBQWFPLE9BQU8sY0FBcEJQLDRDQUFBQSxzQkFBc0JHLE9BQU87b0JBQ3RDSyxPQUFPQztnQkFDVDs7UUFDSjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uL01hc2tlZEd1YXJkaWFuIC0gV2FsbGV0IFNlY3VyaXR5IEFuYWx5c3QvbGlicmFyeS9Xcml0ZUd1YXJkaWFuQ29udHJhY3QudHM/OTQ1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDb250cmFjdCwgdHlwZSBXYWxsZXRDbGllbnQgfSBmcm9tICd2aWVtJztcclxuaW1wb3J0IHR5cGUgeyBBYmkgfSBmcm9tICd2aWVtJztcclxuaW1wb3J0IGFiaUpzb24gZnJvbSAnLi4vY29udHJhY3RzL01hc2tlZEd1YXJkaWFuQUJJLmpzb24nO1xyXG5cclxuY29uc3QgYWJpID0gYWJpSnNvbiBhcyBBYmk7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gV3JpdGVHdWFyZGlhbkNvbnRyYWN0KHdhbGxldENsaWVudDogV2FsbGV0Q2xpZW50KSB7XHJcbiAgcmV0dXJuIHtcclxuICAgIHdyaXRlOiB7XHJcbiAgICAgIHNldEd1YXJkaWFuU3RhdHVzOiAoYWRkcmVzczogYDB4JHtzdHJpbmd9YCkgPT5cclxuICAgICAgICB3YWxsZXRDbGllbnQud3JpdGVDb250cmFjdCh7XHJcbiAgICAgICAgICBhZGRyZXNzOiAnMHhjZTlCMEE5NjE1ZGM4QzkxMmYyZmYwNTMxRDFjZjE2NkFlYUIyODM4JyxcclxuICAgICAgICAgIGFiaSxcclxuICAgICAgICAgIGZ1bmN0aW9uTmFtZTogJ3NldEJsb2NrZWRSZWNpcGllbnQnLFxyXG4gICAgICAgICAgYXJnczogW2FkZHJlc3MsIHRydWVdLCAgICAgICAgICAgICAgXHJcbiAgICAgICAgICBhY2NvdW50OiB3YWxsZXRDbGllbnQuYWNjb3VudD8uYWRkcmVzcyBhcyBgMHgke3N0cmluZ31gLFxyXG4gICAgICAgICAgY2hhaW46IHVuZGVmaW5lZFxyXG4gICAgICAgIH0pLFxyXG4gICAgfSxcclxuICB9O1xyXG59XHJcbiJdLCJuYW1lcyI6WyJhYmlKc29uIiwiYWJpIiwiV3JpdGVHdWFyZGlhbkNvbnRyYWN0Iiwid2FsbGV0Q2xpZW50Iiwid3JpdGUiLCJzZXRHdWFyZGlhblN0YXR1cyIsImFkZHJlc3MiLCJ3cml0ZUNvbnRyYWN0IiwiZnVuY3Rpb25OYW1lIiwiYXJncyIsImFjY291bnQiLCJjaGFpbiIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/../MaskedGuardian - Wallet Security Analyst/library/WriteGuardianContract.ts\n"));

/***/ })

});